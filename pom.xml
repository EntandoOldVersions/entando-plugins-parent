<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.entando.entando.plugins</groupId>
	<artifactId>entando-plugins-parent</artifactId>
	<version>experiment-components-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Entando: Plugins parent - Experiment Components</name>
	<url>http://www.entando.com/</url>
	<licenses>
		<license>
			<name>GNU Lesser General Public License, version 2.1</name>
			<url>http://www.gnu.org/licenses/lgpl-2.1.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<description>Plugins parent for Entando: an agile, modern and user-centric open source Portal platform.</description>
	<modules>
		<!--
		<module>entando-plugin-jpfacetnav</module>
		-->
		<module>entando-plugin-jpmail</module>
		<module>entando-plugin-jpwebdynamicform</module>
		<!--
		<module>entando-plugin-jprss</module>
		-->
		<module>entando-plugin-jpsharewith</module>
		<!--
		<module>entando-plugin-jpcalendar</module>
		-->
		<module>entando-plugin-jpldap</module>
		<module>entando-plugin-jpuserprofile</module>
		<module>entando-plugin-jpuserreg</module>
		<!--
		<module>entando-plugin-jpaddressbook</module>
		<module>entando-plugin-jpnewsletter</module>
		-->
		<module>entando-plugin-jpsurvey</module>
		<!--
		<module>entando-plugin-jpavatar</module>
		<module>entando-plugin-jpactionlogger</module>
		<module>entando-plugin-jpcontentnotifier</module>NON A POSTO DA TEMPO
		-->
		<module>entando-plugin-jpfastcontentedit</module>
		<!--
		<module>entando-plugin-jpgeoref</module>
		<module>entando-plugin-jpwebmail</module>NON A POSTO DA TEMPO
		<module>entando-plugin-jpimagemap</module>
		<module>entando-plugin-jpphotogallery</module>
		<module>entando-plugin-jprssaggregator</module>
		<module>entando-plugin-jpshowletreplicator</module>
		<module>entando-plugin-jpwtt</module>NON A POSTO DA TEMPO
		<module>entando-plugin-jpmyportal</module>NON A POSTO DA TEMPO
		<module>entando-plugin-jpmassiveresourceloader</module>NON A POSTO DA TEMPO
		<module>entando-plugin-jpremoteresourceloader</module>NON A POSTO DA TEMPO
		<module>entando-plugin-jpversioning</module>
		<module>entando-plugin-jpcasclient</module>
		<module>entando-plugin-jpstats</module>
		<module>entando-plugin-jpcontentworkflow</module>
		-->
		<module>entando-plugin-jpcontentfeedback</module>
		<!--
		<module>entando-plugin-jpcmstagcloud</module>
		<module>entando-plugin-jpcontentrefs</module>
		-->
		<module>entando-plugin-jpmyportalplus</module>
		<module>entando-plugin-jptokenapi</module>
	</modules>
	<!--
	<distributionManagement>
		<snapshotRepository>
			<id>entando-snapshots</id>
			<url>dav:http://localhost/nexus/content/repositories/entando-snapshots</url>
		</snapshotRepository>
		<repository>
			<id>entando-releases</id>
			<url>dav:http://localhost/nexus/content/repositories/entando-releases</url>
		</repository>
	</distributionManagement>
	-->
	<properties>
		
		<test.database.driver>org.postgresql.Driver</test.database.driver>
		<test.database.hostname>localhost</test.database.hostname>
		<test.database.port>5432</test.database.port>
		<test.database.username>agile</test.database.username>
		<test.database.password>agile</test.database.password>
		<test.database.port.url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testPort</test.database.port.url>
		<test.database.serv.url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testServ</test.database.serv.url>
		
		<!--
		<test.database.driver>com.mysql.jdbc.Driver</test.database.driver>
		<test.database.hostname>localhost</test.database.hostname>
		<test.database.port>3306</test.database.port>
		<test.database.username>root</test.database.username>
		<test.database.password>agile</test.database.password>
		<test.database.port.url>jdbc:mysql://${test.database.hostname}:${test.database.port}/EntandoCoreEnginetestPort</test.database.port.url>
		<test.database.serv.url>jdbc:mysql://${test.database.hostname}:${test.database.port}/EntandoCoreEnginetestServ</test.database.serv.url>
		-->
		<!--
		<test.database.driver>org.apache.derby.jdbc.EmbeddedDriver</test.database.driver>
		<test.database.hostname>localhost</test.database.hostname>
		<test.database.port>1527</test.database.port>
		<test.database.username>agile</test.database.username>
		<test.database.password>agile</test.database.password>
		<test.database.port.url>jdbc:derby:${project.artifactId}testPort;create=true</test.database.port.url>
		<test.database.serv.url>jdbc:derby:${project.artifactId}testServ;create=true</test.database.serv.url>
		-->
		<spring.version>3.0.6.RELEASE</spring.version>
		<struts2.version>2.3.4.1</struts2.version>
	</properties>
	
	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-webdav-jackrabbit</artifactId>
				<version>1.0</version>
			</extension>
		</extensions>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.xsd</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/tld</directory>
				<targetPath>META-INF</targetPath>
				<includes>
					<include>**/*.tld</include>
				</includes>
			</resource>		
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0-beta-1</version>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>2.2.1</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>1.6</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<target>1.6</target>
					<source>1.6</source>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2.1</version><!--$NO-MVN-MAN-VER$ -->
				<executions>
					<execution>
						<id>assembly-classes</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
							<descriptors>
								<descriptor>${project.parent.basedir}/src/main/assembly/classes.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<!--
					<execution>
						<id>assembly-misc-files</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
							<descriptors>
								<descriptor>${project.parent.basedir}/src/main/assembly/misc.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>assembly-misc-files-test</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
							<descriptors>
								<descriptor>${project.parent.basedir}/src/test/assembly/misc-test.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					-->
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.3</version><!--$NO-MVN-MAN-VER$ -->
				<executions>
					<execution>
						<id>unpack-misc-dependencies</id>
						<phase>process-classes</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies-unpacked/misc</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<appendOutput>true</appendOutput>
							<includeGroupIds>org.entando.entando.plugins</includeGroupIds>
							<includeClassifiers>misc</includeClassifiers>
							<includeTypes>zip</includeTypes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-misc-dependencies-test</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/dependencies-unpacked/misc-test</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<appendOutput>true</appendOutput>
							<includeGroupIds>org.entando.entando.plugins</includeGroupIds>
							<includeClassifiers>misc-test</includeClassifiers>
							<includeTypes>zip</includeTypes>
							<includeScope>test</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>unpack-misc-core-test</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<outputDirectory>${project.build.directory}/test</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
							<appendOutput>true</appendOutput>
							<includeGroupIds>org.entando.entando</includeGroupIds>
							<includeArtifactIds>entando-core-engine</includeArtifactIds>
							<includeClassifiers>misc-test</includeClassifiers>
							<includeTypes>zip</includeTypes>
							<includeScope>test</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12</version>
				<configuration>
					<argLine>-Xms512m -Xmx1024m</argLine>
					<testFailureIgnore>false</testFailureIgnore>
					<excludes>
						<exclude>**/*BaseTestCase*</exclude>
					</excludes>
					<includes> 
						<include>**/AllTests.java</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>prepare-config-test</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/test</outputDirectory>
							<encoding>UTF-8</encoding>
							<resources>
								<resource>
									<directory>${project.parent.build.directory}/test/config</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<dependencies>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.1-901.jdbc4</version>
					</dependency>
				</dependencies>
				<configuration>
					<driver>org.postgresql.Driver</driver>
					<username>${test.database.username}</username>
					<password>${test.database.password}</password>
					<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/template1</url>
					<skip>${skipTests}</skip>
					<keepFormat>false</keepFormat>
				</configuration>
				<executions>
					<execution>
						<id>drop-db-before-test-if-any-port</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<sqlCommand>drop database "${project.artifactId}testPort"</sqlCommand>
							<onError>continue</onError>
						</configuration>
					</execution>
					<execution>
						<id>drop-db-before-test-if-any-serv</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<sqlCommand>drop database "${project.artifactId}testServ"</sqlCommand>
							<onError>continue</onError>
						</configuration>
					</execution>
					<execution>
						<id>create-db-port</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<sqlCommand>create database "${project.artifactId}testPort"</sqlCommand>
						</configuration>
					</execution>
					<execution>
						<id>create-db-serv</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<autocommit>true</autocommit>
							<sqlCommand>create database "${project.artifactId}testServ"</sqlCommand>
						</configuration>
					</execution>
					<!--
					<execution>
						<id>create-schema-port</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testPort</url>
							<onError>continue</onError>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>${project.parent.build.directory}/test/sql/entando-core-enginetestPort_schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<execution>
						<id>create-schema-serv</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testServ</url>
							<onError>continue</onError>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>${project.parent.build.directory}/test/sql/entando-core-enginetestServ_schema.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<execution>
						<id>create-data-port</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testPort</url>
							<escapeProcessing>false</escapeProcessing>
							<enableBlockMode>true</enableBlockMode>
							<printResultSet>true</printResultSet>
							<outputFile/>
							<srcFiles>
								<srcFile>${project.parent.build.directory}/test/sql/entando-core-enginetestPort_data.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<execution>
						<id>create-data-serv</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testServ</url>
							<escapeProcessing>false</escapeProcessing>
							<enableBlockMode>true</enableBlockMode>
							<printResultSet>true</printResultSet>
							<outputFile/>
							<srcFiles>
								<srcFile>${project.parent.build.directory}/test/sql/entando-core-enginetestServ_data.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<execution>
						<id>execute-plugin-query-dependencies-port</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testPort</url>
							<escapeProcessing>false</escapeProcessing>
							<enableBlockMode>true</enableBlockMode>
							<printResultSet>true</printResultSet>
							<outputFile/>
							<onError>continue</onError>
							<fileset>
								<basedir>${project.build.directory}</basedir>
								<includes>
									<include>dependencies-unpacked/misc-test/**/sql/postgresql/port.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
					<execution>
						<id>execute-plugin-query-dependencies-serv</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testServ</url>
							<escapeProcessing>false</escapeProcessing>
							<enableBlockMode>true</enableBlockMode>
							<printResultSet>true</printResultSet>
							<outputFile/>
							<onError>continue</onError>
							<fileset>
								<basedir>${project.build.directory}</basedir>
								<includes>
									<include>dependencies-unpacked/misc-test/**/sql/postgresql/serv.sql</include>
								</includes>
							</fileset>
						</configuration>
					</execution>
					<execution>
						<id>execute-plugin-query-port</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testPort</url>
							<escapeProcessing>false</escapeProcessing>
							<enableBlockMode>true</enableBlockMode>
							<printResultSet>true</printResultSet>
							<outputFile/>
							<srcFiles>
								<srcFile>src/test/sql/postgresql/port.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					<execution>
						<id>execute-plugin-query-serv</id>
						<phase>process-test-classes</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<url>jdbc:postgresql://${test.database.hostname}:${test.database.port}/${project.artifactId}testServ</url>
							<escapeProcessing>false</escapeProcessing>
							<enableBlockMode>true</enableBlockMode>
							<printResultSet>true</printResultSet>
							<outputFile/>
							<srcFiles>
								<srcFile>src/test/sql/postgresql/serv.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
					-->
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											sql-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.3,)
										</versionRange>
										<goals>
											<goal>
												unpack-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
 		<dependency>
			<groupId>org.entando.entando</groupId>
			<artifactId>entando-core-engine</artifactId>
			<version>experiment-components-SNAPSHOT</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.entando.entando</groupId>
			<artifactId>entando-core-engine</artifactId>
			<version>experiment-components-SNAPSHOT</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
 		<dependency>
			<groupId>org.entando.entando</groupId>
			<artifactId>entando-core-engine</artifactId>
			<version>experiment-components-SNAPSHOT</version>
			<type>zip</type>
			<classifier>misc-test</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.18</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>10.8.2.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>10.8.2.2</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.9</version>
			</plugin>
		</plugins>
	</reporting>
</project>
